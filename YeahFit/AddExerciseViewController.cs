// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace YeahFit
{
	public partial class AddExerciseViewController : UIViewController
	{
        public UINavigationController CurrentNavigationController;

        static UITableView tableView;
        public static List<InternalExercise> internalExercises = new List<InternalExercise>();

        public static AddWorkoutViewController addWorkoutViewController;

        public static int index;

        public AddExerciseViewController(IntPtr handle) : base(handle)
        {
        }


        /// <summary>
        /// Initialize
        /// </summary>
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            InitializeExercises.Initialize();
            internalExercises = new List<InternalExercise>();
            internalExercises = InitializeExercises.exercises;

            // Set source for ingredient tableView
            tableView_AddExercise.Source = new AddExerciseTableViewSource(internalExercises, this, CurrentNavigationController);
            tableView_AddExercise.RowHeight = 71;

            // Reload ingredient tableView
            tableView_AddExercise.ReloadData();
        }

        /// <summary>
        /// View reappears
        /// </summary>
        /// <param name="animated"></param>
        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

            InitializeExercises.Initialize();
            internalExercises = new List<InternalExercise>();
            internalExercises = InitializeExercises.exercises;

            // Set source for ingredient tableView
            tableView_AddExercise.Source = new AddExerciseTableViewSource(internalExercises, this, CurrentNavigationController);
            tableView_AddExercise.RowHeight = 71;

            // Reload ingredient tableView
            tableView_AddExercise.ReloadData();
        }

        /// <summary>
        /// Reload FirstView if user swipes down the View
        /// + Set edit in SecondView false
        /// </summary>
        /// <param name="animated"></param>
        public override void ViewDidDisappear(bool animated)
        {
            base.ViewDidDisappear(animated);


        }
    }
}
