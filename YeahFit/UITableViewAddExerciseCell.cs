// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace YeahFit
{
    public partial class UITableViewAddExerciseCell : UITableViewCell
    {
        List<InternalExercise> exercises = new List<InternalExercise>();

        public UITableViewAddExerciseCell(IntPtr handle) : base(handle)
        {
        }

        /// <summary>
        /// Update each cell content
        /// </summary>
        /// <param name="selectedIngredient"></param>
        /// <param name="indexPath"></param>
        internal void UpdateCell(InternalExercise selectedExercise, int indexPath)
        {
            exercises = InitializeExercises.exercises;

            /*for (int i = 0; i < exercises.Count; i++)
            {
                if (selectedExercise.ExerciseID == exercises[i].ExerciseID)
                {
                    lbl_ExerciseName.Text = (exercises[i].ExerciseName);
                }
            }*/

            // Set ingredient text
            lbl_ExerciseName.Text = selectedExercise.ExerciseName;

            //
            // Recipe image
            //

            // Get recipe image from byte array
            var data = NSData.FromArray(selectedExercise.ExerciseImage);

            // Convert to UIImage
            UIImage image = UIImage.LoadFromData(data);

            // Set as image
            imageView_Exercise.Image = image;

            // AspectFill
            imageView_Exercise.ContentMode = UIViewContentMode.ScaleAspectFill;

        }
    }
}
