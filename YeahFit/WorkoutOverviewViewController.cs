// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using MySql.Data.MySqlClient;
using UIKit;
using System.Drawing;

namespace YeahFit
{
	public partial class WorkoutOverviewViewController : UIViewController
	{
        public UINavigationController CurrentNavigationController;

        // Main list of all recipes
        public static List<Workout> workouts;


        public WorkoutOverviewViewController(IntPtr handle) : base(handle)
        {
        }


        /// <summary>
        /// Initialization of the main view 'FirstView'
        /// </summary>
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            // Perform any additional setup after loading the view, typically from a nib.

            // Buttons for setting categories
            /*btn_Breakfast.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "breakfast")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "breakfast";
                }
                ViewDidAppear(true);
            };
            btn_Lunch.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "lunch")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "lunch";
                }
                ViewDidAppear(true);
            };
            btn_Dinner.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "dinner")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "dinner";
                }
                ViewDidAppear(true);
            };
            btn_Dessert.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "dessert")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "dessert";
                }
                ViewDidAppear(true);
            };
            btn_Snacks.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "snacks")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "snacks";
                }
                ViewDidAppear(true);
            };
            btn_Vegan.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "vegan")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "vegan";
                }
                ViewDidAppear(true);
            };
            btn_Vegetarian.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "vegetarian")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "vegetarian";
                }
                ViewDidAppear(true);
            };
            btn_Drinks.TouchUpInside += (sender, e) =>
            {
                if (InitializeRecipes.category == "drinks")
                {
                    InitializeRecipes.category = "";
                }
                else
                {
                    InitializeRecipes.category = "drinks";
                }
                ViewDidAppear(true);
            };

            // Button for showing the FilterView
            btn_Filter.TouchUpInside += (sender, e) =>
            {
                FilterViewController.firstViewController = this;
            };
            */
            // Loading the tableView
            FilterViewController.workoutOverviewViewController = this;
            WorkoutViewController.firstViewController = this;
            workouts = null;
            WorkoutViewController.challenge = false;

            // Get data from database
            InitializeWorkouts.Initialize();

            // Setting recipes as its source
            tableView_Workouts.Source = new WorkoutTableViewSource(workouts, this, CurrentNavigationController);
            tableView_Workouts.RowHeight = 360;

            // Reload tableView
            tableView_Workouts.ReloadData();

        }

        /// <summary>
        /// Reload tabeView_Recipes after view reappeared
        /// </summary>
        /// <param name="animated"></param>
        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
            WorkoutViewController.challenge = false;
            WorkoutViewController.firstViewController = this;
            workouts = null;
            InitializeWorkouts.Initialize();
            tableView_Workouts.Source = new WorkoutTableViewSource(workouts, this, CurrentNavigationController);
            tableView_Workouts.RowHeight = 360;
            tableView_Workouts.ReloadData();
        }

        public override void DidReceiveMemoryWarning()
        {
            base.DidReceiveMemoryWarning();
            // Release any cached data, images, etc that aren't in use.
        }

        public override void ViewDidDisappear(bool animated)
        {
            base.ViewDidDisappear(animated);
            this.DismissViewController(true, () => { FilterViewController.workoutOverviewViewController = this; });
        }

        /// <summary>
        /// Reload tabeView_Recipes from other Views
        /// </summary>
        /// <param name="firstViewController"></param>
        public static void Refresh(WorkoutOverviewViewController firstViewController)
        {
            firstViewController.ViewDidAppear(true);
        }
    }
}
