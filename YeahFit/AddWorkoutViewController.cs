// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using Foundation;
using MySql.Data.MySqlClient;
using UIKit;

namespace YeahFit
{
	public partial class AddWorkoutViewController : UIViewController
	{

        public static MySqlConnection con;

        MySqlCommand cmd;
        MemoryStream fs;
        BinaryReader br;

        UIImagePickerController picker;

        internal static List<Exercise> exercises;
        public static List<InternalExercise> internalExercises;

        public static int index;

        public static WorkoutViewController workoutViewController;

        public static Workout selectedWorkout;

        public static bool edit;

        UIImage originalImage;

        int id;

        public static string workoutName = "";
        public static int workoutDifficulty = 1;
        public static int workoutDuration = 0;
        public static bool fullBody = false;
        public static bool upperBody = false;
        public static bool lowerBody = false;
        public static bool push = false;
        public static bool pull = false;
        public static bool core = false;
        public static bool noEquipment = false;
        public static bool twentyMinutes = false;

        public AddWorkoutViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            btn_AddWorkout.TintColor = UIColor.Black;

            internalExercises = new List<InternalExercise>{ };
            exercises = new List<Exercise>
            {
                new Exercise
                {
                    ExerciseName = "",
                    ExerciseSets = "",
                    ExerciseReps = "",
                },
            };

            // Set source for steps list
            AddExerciseViewController.addWorkoutViewController = this;
            tableView_AddWorkouts.Source = new AddWorkoutTableViewSource(exercises, this, selectedWorkout);

            // Reload
            tableView_AddWorkouts.ReloadData();

            // Button click for choosen an image from gallery
            btn_takePhoto.TouchUpInside += (sender, e) =>
            {
                picker = new UIImagePickerController();
                picker.SourceType = UIImagePickerControllerSourceType.PhotoLibrary;
                picker.MediaTypes = UIImagePickerController.AvailableMediaTypes(UIImagePickerControllerSourceType.PhotoLibrary);
                picker.FinishedPickingMedia += Finished;
                picker.Canceled += Canceled;
                PresentViewController(picker, animated: true, completionHandler: null);
            };

            btn_AddWorkout.TouchUpInside += (sender, e) =>
            {
                if (LoginViewController.loggedin == true)
                {
                    if (workoutName != "" && exercises[0].ExerciseName != "")
                    {
                        // Open a connection to the YeahFit database on the local server with the root user and empty password.
                        con = new MySqlConnection(@"Server=localhost;Database=YeahFit;User Id=root;Password=; CharSet = utf8");
                        con.Open();


                        Byte[] myByteArray = null;
                        if (originalImage != null)
                        {
                            using (NSData imageData = originalImage.AsPNG())
                            {
                                myByteArray = new Byte[imageData.Length];
                                System.Runtime.InteropServices.Marshal.Copy(imageData.Bytes, myByteArray, 0, Convert.ToInt32(imageData.Length));

                                var data = NSData.FromArray(myByteArray);
                                UIImage image = UIImage.LoadFromData(data);
                                originalImage = image;
                            }
                        }

                        MySqlCommand insert1 = con.CreateCommand();
                        MySqlParameter byteData = insert1.Parameters.Add("@imgData", MySqlDbType.Binary);
                        byteData.Value = myByteArray;

                        insert1.CommandText = $"INSERT INTO Workout (WorkoutName, WorkoutBild, WorkoutDauer, SchwierigkeitsID, Liked) " +
                                $"VALUES ('{workoutName}', '@imgData', '{workoutDuration}', '{workoutDifficulty}', '{0}');";
                        insert1.ExecuteNonQuery();



                        using (MySqlCommand getworkoutdifficulty = new MySqlCommand($"SELECT WorkoutID FROM `Workout`" +
                            $" WHERE WorkoutName='{workoutName}'" +
                            $" AND SchwierigkeitsID='{workoutDifficulty}'" +
                            $" AND WorkoutBild='@imgData'", con))
                        {
                            using (MySqlDataReader reader2 = getworkoutdifficulty.ExecuteReader())
                            {
                                while (reader2.Read())
                                {
                                    id = Convert.ToInt32(reader2["WorkoutID"]);
                                }
                            }
                        }

                        MySqlCommand insert2 = con.CreateCommand();
                        insert2.CommandText = $"INSERT INTO Workout_Kategorie (WorkoutID, Core, Oberkörper, Unterkörper, Ganzkörper, Push, Pull, 20min, No Equipment) " +
                                $"VALUES ('{id}', '{core}', '{upperBody}', '{lowerBody}', '{fullBody}', '{push}', '{pull}', '{twentyMinutes}', '{noEquipment}');";
                        insert2.ExecuteNonQuery();

                        for (int i = 1; i <= exercises.Count; i++)
                        {
                            MySqlCommand insert3 = con.CreateCommand();
                            insert3.CommandText = $"INSERT INTO Workout_Übung (WorkoutID, ÜbungID, Reihenfolge, Sätze, Wiederholungen) " +
                                    $"VALUES ('{id}', '{internalExercises[i - 1].ExerciseID}', '{i}', '{exercises[id - 1].ExerciseSets}', '{exercises[id - 1].ExerciseReps}');";
                            insert3.ExecuteNonQuery();
                        }

                        MySqlCommand insert4 = con.CreateCommand();
                        insert4.CommandText = $"INSERT INTO Benutzer_Workout (WorkoutID, BenutzerID) " +
                                $"VALUES ('{id}', '{LoginViewController.userID}');";
                        insert4.ExecuteNonQuery();

                        con.Close();
                    }
                    else
                    {
                        //Create Alert
                        var okAlertController = UIAlertController.Create("Nicht alle Informationen angegeben", "Du hast vergessen, einen Workoutnamen oder Übungen auszuwählen.", UIAlertControllerStyle.Alert);

                        //Add Action
                        okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                        // Present Alert
                        PresentViewController(okAlertController, true, null);
                    }
                }
                Alert();
            };
        }

        /// <summary>
        /// If view reappears
        /// </summary>
        /// <param name="animated"></param>
        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

            Alert();
            // Reload TableViews
            tableView_AddWorkouts.ReloadData();
        }

        /// <summary>
        /// Refreshes staps table view on SecondView
        /// </summary>
        /// <param name="secondViewController"></param>
        /// <param name="StepInfo"></param>
        public static void RefreshExercises(AddWorkoutViewController addWorkoutViewController)
        {
            addWorkoutViewController.ViewDidAppear(true);
        }

        /// <summary>
        /// Set image
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        public void Finished(object sender, UIImagePickerMediaPickedEventArgs e)
        {
            bool isImage = false;
            switch (e.Info[UIImagePickerController.MediaType].ToString())
            {
                case "public.image":
                    isImage = true;
                    break;
                case "public.video":
                    break;
            }
            NSUrl referenceURL = e.Info[new NSString("UIImagePickerControllerReferenceUrl")] as NSUrl;
            if (referenceURL != null) Console.WriteLine("Url:" + referenceURL.ToString());
            if (isImage)
            {
                originalImage = e.Info[UIImagePickerController.OriginalImage] as UIImage;
            }
            else
            {
                NSUrl mediaURL = e.Info[UIImagePickerController.MediaURL] as NSUrl;
                if (mediaURL != null)
                {
                    Console.WriteLine(mediaURL.ToString());
                }
            }
            picker.DismissModalViewController(true);
        }

        /// <summary>
        /// If user doesn't select an image from image picker
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        void Canceled(object sender, EventArgs e)
        {
            picker.DismissModalViewController(true);
        }

        void Alert()
        {
            if (LoginViewController.loggedin == false)
            {
                //Create Alert
                var okAlertController = UIAlertController.Create("Melde dich an", "Melde dich an, eigene Workouts erstellen zu können.", UIAlertControllerStyle.Alert);

                //Add Action
                okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                // Present Alert
                PresentViewController(okAlertController, true, null);
            }
        }
    }
}
