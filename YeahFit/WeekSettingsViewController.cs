// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using MySql.Data.MySqlClient;
using UIKit;

namespace YeahFit
{
    public partial class WeekSettingsViewController : UIViewController
    {
        //public static MySqlConnection con;

        //int weekID = 0;

        public static FirstViewController firstViewController;

        bool internalMonday = false;
        bool internalTuesday = false;
        bool internalWednesday = false;
        bool internalThursday = false;
        bool internalFriday = false;
        bool internalSaturday = false;
        bool internalSunday = false;

        public WeekSettingsViewController(IntPtr handle) : base(handle)
        {
        }

        /// <summary>
        /// Initialize
        /// </summary>
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            internalMonday = InitializeWeek.monday;
            internalTuesday = InitializeWeek.tuesday;
            internalWednesday = InitializeWeek.wednesday;
            internalThursday = InitializeWeek.thursday;
            internalFriday = InitializeWeek.friday;
            internalSaturday = InitializeWeek.saturday;
            internalSunday = InitializeWeek.sunday;

            btn_Monday.TouchUpInside += (sender, e) =>
            {
                if (internalMonday == true)
                {
                    SelectButtonColor.SelectButton(btn_Monday, false);
                    internalMonday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Monday, true);
                    internalMonday = true;
                }
            };
            btn_Tuesday.TouchUpInside += (sender, e) =>
            {
                if (internalTuesday == true)
                {
                    SelectButtonColor.SelectButton(btn_Tuesday, false);
                    internalTuesday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Tuesday, true);
                    internalTuesday = true;
                }
            };
            btn_Wednesday.TouchUpInside += (sender, e) =>
            {
                if (internalWednesday == true)
                {
                    SelectButtonColor.SelectButton(btn_Wednesday, false);
                    internalWednesday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Wednesday, true);
                    internalWednesday = true;
                }
            };
            btn_Thursday.TouchUpInside += (sender, e) =>
            {
                if (internalThursday == true)
                {
                    SelectButtonColor.SelectButton(btn_Thursday, false);
                    internalThursday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Thursday, true);
                    internalThursday = true;
                }
            };
            btn_Friday.TouchUpInside += (sender, e) =>
            {
                if (internalFriday == true)
                {
                    SelectButtonColor.SelectButton(btn_Friday, false);
                    internalFriday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Friday, true);
                    internalFriday = true;
                }
            };
            btn_Saturday.TouchUpInside += (sender, e) =>
            {
                if (internalSaturday == true)
                {
                    SelectButtonColor.SelectButton(btn_Saturday, false);
                    internalSaturday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Saturday, true);
                    internalSaturday = true;
                }
            };
            btn_Sunday.TouchUpInside += (sender, e) =>
            {
                if (internalSunday == true)
                {
                    SelectButtonColor.SelectButton(btn_Sunday, false);
                    internalSunday = false;
                }
                else
                {
                    SelectButtonColor.SelectButton(btn_Sunday, true);
                    internalSunday = true;
                }
            };
            btn_SaveWeek.TouchUpInside += (sender, e) =>
            {
                SetWeek.SelectSetWeek(internalMonday, internalTuesday, internalWednesday, internalTuesday, internalFriday, internalSaturday, internalSunday);

                /*if (LoginViewController.loggedin == true)
                {
                    weekID = 0;

                    // Open a connection to the YeahFit database on the local server with the root user and empty password.
                    con = new MySqlConnection(@"Server=localhost;Database=YeahFit;User Id=root;Password=; CharSet = utf8");
                    con.Open();

                    using (MySqlCommand getWeek = new MySqlCommand($"SELECT * FROM `Woche` " +
                        $"WHERE Montag='{internalMonday}' " +
                        $"AND Dienstag='{internalTuesday}' " +
                        $"AND Mittwoch='{internalWednesday}' " +
                        $"AND Donnerstag='{internalThursday}' " +
                        $"AND Freitag='{internalFriday}' " +
                        $"AND Samstag='{internalSaturday}' " +
                        $"AND Sonntag='{internalSunday}' ", con))
                    {
                        using (MySqlDataReader reader = getWeek.ExecuteReader())
                        {

                            while (reader.Read())
                            {
                                weekID = Convert.ToInt32(reader["WochenID"]);
                            }
                        }
                    }

                    if (weekID == 0)
                    {
                        MySqlCommand insert = new MySqlCommand($"INSERT INTO Woche (Montag, Dienstag, Mittwoch, Donnerstag, Freitag, Samstag, Sonntag) " +
                            $"VALUES ('{internalMonday}', '{internalTuesday}', '{internalWednesday}', '{internalThursday}', '{internalFriday}', '{internalSaturday}', '{internalSunday}');", con);
                        insert.ExecuteNonQuery();

                        using (MySqlCommand getNewWeek = new MySqlCommand($"SELECT WochenID FROM `Woche`, `Benutzer_Woche` " +
                            $"WHERE Woche.WochenID = Benutzer_Woche.WochenID " +
                            $"AND Benutzer_Woche.BenutzerID = {LoginViewController.userID}", con))
                        {
                            using (MySqlDataReader reader2 = getNewWeek.ExecuteReader())
                            {

                                while (reader2.Read())
                                {
                                    weekID = Convert.ToInt32(reader2["WochenID"]);
                                }
                            }
                        }
                        InitializeWeek.wochenid = weekID;
                    }
                    else
                    {
                        MySqlCommand insert2 = new MySqlCommand($"INSERT INTO Benutzer_Woche (BenutzerID, WochenID) " +
                            $"VALUES ('{LoginViewController.userID}', '{weekID}';", con);
                        insert2.ExecuteNonQuery();
                    }
                    con.Close();
                */





                    this.DismissViewController(true, () => { FirstViewController.Refresh(firstViewController); });
                }
                Alert();
            };
        }

        void Alert()
        {
            if (LoginViewController.loggedin == false)
            {
                //Create Alert
                var okAlertController = UIAlertController.Create("Melde dich an", "Melde dich an, um deine Woche einstellen zu k√∂nnen.", UIAlertControllerStyle.Alert);

                //Add Action
                okAlertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));

                // Present Alert
                PresentViewController(okAlertController, true, null);
            }
        }

        /// <summary>
        /// View reappears
        /// </summary>
        /// <param name="animated"></param>
        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);

            Alert();
        }

        /// <summary>
        /// Reload FirstView if user swipes down the View
        /// + Set edit in SecondView false
        /// </summary>
        /// <param name="animated"></param>
        public override void ViewDidDisappear(bool animated)
        {
            base.ViewDidDisappear(animated);


        }
    }
}
